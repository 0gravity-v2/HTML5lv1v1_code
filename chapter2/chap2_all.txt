2-1 CSSの基礎知識
2-1-1 基本的な書式と各部の名称

セレクタ、宣言ブロック
h1 {
    color: white;
    font-size: 24px;
    text-shadow: 1px 1px 2px black;
}

プロパティ、値
h1 { color: white }

セレクタはカンマで区切って、複数指定することが可能
h1, p, address, small {
    color: #333;
    background: #fff;
}

CSSのコメントは /* */

2-1-2 link要素でHTMLに組み込む

<!DOCTYPE html>
<html>
<head>
・・・
<link rel="stylesheet" href="style.css">
</head>
<body>
・・・
</body>
</html>

link要素のmedia属性

link要素のtype属性

2-1-3 style要素でHTMLに組み込む

style要素に指定できる属性
media、type、nonce

<!DOCTYPE html>
<html>
<head>
・・・
<style>
  body {
    color: #333;
    background: #fff;
  }
  p { font-size: 13px; }
</style>
</head>
<body>
・・・
</body>
</html>


2-1-4 style属性でHTMLに組み込む

<!DOCTYPE html>
<html>
<head>
・・・
</head>
<body style="color: #333; background: #fff;">
<p style="font-size: 13px;">
・・・
</p>
</body>
</html>


2-1-5 @importでCSSに組み込む
@importを使用することで、CSSの中でさらに外部スタイルシートを読み込ませることができる

@import "style.css";
@import url("style.css");
@import "style.css" screen, print;


2-1-6 ボックスの構造

マージン
ボーダー
パディング


2-1-7 長さをあらわす単位

フォントに対する相対的な長さを表す単位
em, rem, ex, ch

ビューポートに対するパーセンテージで表す単位
vw, vh, vmin, vmax

絶対的な長さを表す単位
px, pt, pc, in, cm, mm, q

calc関数による計算式の指定
font-size: calc(100vw / 35);
margin: calc(1rem - 2px) calc(1rem - 1px);



2-2 セレクタ
2-2-1 セレクタの種類と組み合わせのルール


2-2-2 タイプセレクタ（要素名）

h1 { color: #333; }


2-2-3 ユニバーサルセレクタ（*）

* { color: #333; }


2-2-4 クラスセレクタ（.）

p.subtitle { color: #333; }


2-2-5 IDセレクタ（*）

ul#footnav { color: #333; }


2-2-6 属性セレクタ（[属性名]）
7種類の属性セレクタ
[属性名]
[属性名="属性値"]
[属性名~="属性値"]
[属性名|="属性値"]
[属性名^="属性値の始め"]
[属性名$="属性値の終り"]
[属性名*="属性値の一部"]

img[src$=".jpg"] { border: 3px solid #f00; }


2-2-7 リンク関連の擬似クラス（:）

使用頻度が高い4個。通常、この順番で指定する
a:link  リンク先をまだ見ていない状態のa要素
a:visited   リンク先を既に見た状態のa要素
a:hover カーソルが上にある状態の要素
a:active    マウスボタン等がおされている状態の要素

a:link { color: blue; }
a:visited { color: purple; }
a:hover { color: red; }
a:active { color: yellow; }


2-2-8 その他の擬似クラス（:）

残りの19個
:nth-child(式)
:nth-last-child(式)
:nth-of-type(式)
:nth-last-of-type(式)
:first-child
:last-child
:first-of-type
:last-of-type
:only-child
:only-of-type
:focus
:checked
:disabled
:enabled
:root
:empty
:target
:lang(言語コード)
:not(シンプルセレクタ)


tr:nth-child(odd) { background: #ccc; }


2-2-9 疑似要素（::）

::first-line    ブロックレベル要素の1行目
::first-letter  ブロックレベル要素の1文字目
::before    要素内容の先頭にコンテンツを追加
::after 要素内容の最後にコンテンツを追加


2-2-10 結合子
セレクタA 空白文字 セレクタB    Aの子孫のB
セレクタA > セレクタB   Aの直接の子のB
セレクタA + セレクタB   
セレクタA ~ セレクタB


2-3 CSS適用の優先順位
2-3-1 CSSの指定元による優先順位

優先度高
    製作者
    ユーザー
    ユーザーエージェント
        Chrome、Firefoxなどのブラウザ
優先度低


2-3-2 !importantで優先順位を高くする

優先度高
    ユーザーエージェント    !important付き
    ユーザー    !important付き
    製作者  !important付き
    製作者
    ユーザー
    ユーザーエージェント
        Chrome、Firefoxなどのブラウザ
優先度低


p {
    font-size: 24pt !important;
}


2-3-3 セレクタの詳細度による優先順位の計算方法



2-4 色

2-4-1 色を示す値：16進数

#ff0000

#f00


2-4-2 色を示す値：キーワード


2-4-3 色を示す値：rgb()、rgba()

rgb(255, 0, 0)

rgba(255, 0, 0, 0.5)



2-4-4 色を示す値：hsl()、hsla()

hsl(0, 100%, 50%)

hsla(0, 100%, 50%, 0.5)


2-4-5 colorプロパティ
テキストの文字色を設定するプロパティ

body { color: #333; }


2-4-6 opacityプロパティ
要素の不透明度を設定するプロパティ

h1 { opacity: 0.5; }



2-5 背景

2-5-1 background-color プロパティ
ボックスの背景色を設定するプロパティ

body { background-color: #fff; }


2-5-2 background-image プロパティ
背景に画像を表示させるプロパティ

body { background-image: url(a.png), url(b.png), url(c.png); }

body {
    background-image: url(a.png), url(b.png), url(c.png);
    background-repeat: no-repeat, repeat-x, repeat-y;
}


2-5-3 background-clip プロパティ
背景をボックスのどの領域に表示させるのかを設定するプロパティ


2-5-4 background-repeat プロパティ
背景画像を縦または横に繰り返して表示させるのかどうかを設定するプロパティ


2-5-5 background-size プロパティ
背景画像の表示サイズを設定するプロパティ

body {
    background-image: url(books.png);
    background-repeat: no-repeat;
    background-size: contain;
}

body {
    background-image: url(sky.jpg);
    background-size: cover;
}


2-5-6 background-origin プロパティ
背景画像の配置位置を指定する際の基準となる領域を設定するプロパティ


2-5-7 background-position プロパティ
背景画像を表示させる領域内での画像の配置位置を設定するプロパティ

body {
    background-image: url(logo.png);
    background-repeat: no-repeat;
    background-position: 100% 100%;
}


2-5-8 background-attachment プロパティ
背景画像を表示領域に固定して、ページの内容をスクロールしても動かないようにすることができる


2-5-9 background プロパティ
背景関連のプロパティの値をまとめて指定できるプロパティ

body {
    background: #ccc url(castle.jpg) bottom left / 100% auto no-repeat;
    /* 背景色が #ccc（グレー）、背景画像はcastle.jpg、背景画像の位置は左下を基準、表示領域に対して幅は100％、高さはautoで表示、画像の繰り返しはなし */
}

body {
    background: url(a.png) no-repeat, url(b.png) no-repeat, #ffffff url(c.png);
    /* 一番上（手前）の背景画像はa.pngで繰り返しはなし、真ん中の背景画像はb.pngで繰り返しはなし、一番下（後ろ）の背景画像はc.pngで背景色は#ffffff（白） */
}


2-6 テキスト

2-6-1 text-shadow プロパティ
テキストに影を表示させるプロパティ

p {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
}


2-6-2 text-decoration 関連のプロパティ
下線・上線・取消線の色や線種が指定できる


2-6-3 word-break プロパティ
行の折り返しに関する設定をするプロパティ

2-6-4 hyphens プロパティ
ハイフネーションの設定を行うプロパティ


2-6-5 white-space プロパティ
連続する空白文字を1つの半角スペースに変換するかどうか
自動的な行の折り返しを行うかどうか
を制御するプロパティ


2-6-6 text-align プロパティ
ブロックレベル要素に指定し、その内容の行揃えを設定する


2-6-7 vertical-align プロパティ
インライン要素の縦方向の位置を設定するプロパティ


2-6-8 line-height プロパティ
行の高さを設定するプロパティ


2-6-9 text-indent プロパティ
ブロックレベル要素の1行目のインデント（字下げ）を制御するプロパティ

2-6-10 letter-spacing プロパティ
文字間隔を設定するプロパティ


2-6-11 word-spacing プロパティ
単語と単語の間隔を設定するプロパティ


2-6-12 text-transform プロパティ
アルファベットの大文字・小文字を変換して表示させるプロパティ


2-6-13 direction プロパティ
文字表記の方向を設定するプロパティ


2-6-14 unicode-bidi プロパティ
文字表記の方向に関する指示を組み込んだり上書きをすることのできるプロパティ


2-7 フォント

2-7-1 Webフォント
@font-faceでWeb上にあるフォントを指定することで、
そのフォントがインストールされていない環境でもそのフォントが表示させられるようになる

@font-face {
    font-family: mynaviFont;
    src: url(http://example.com/fonts/mynaviRegular.woff);
}
p { font-family: mynaviFont, serif; }


2-7-2 font-family プロパティ
フォントの種類を設定するプロパティ

p {
    font-family: "メイリオ", "ヒラギノ角ゴ Pro W3", Helvetica, sans-serif;
}


2-7-3 font-size プロパティ
フォントサイズを設定するプロパティ


2-7-4 font-weight プロパティ
同じフォントファミリーの中の太さの異なる書体を選択するためのプロパティ
単純に太字にしたい場合にも使用できる


2-7-5 font-style プロパティ
同じフォントファミリーの中のイタリックまたは社寺の書体を選択するためのプロパティ


2-7-6 font-variant プロパティ
同じフォントファミリーの中のスモールキャピタル（大文字を小さくしたような種類のフォント）の書体を選択する要素


2-7-7 font プロパティ
フォント関連プロパティの値をまとめて指定できるプロパティ

p {
    font: bold italic 13px/1.5 "メイリオ", "Meiryo", sans-serif;
}


2-8 ボックス

2-8-1 margin 関連プロパティ


2-8-2 padding 関連プロパティ


2-8-3 border 関連プロパティ


2-8-4 幅と高さを設定するプロパティ


2-8-5 boeder-radius プロパティ
ボックスの角を丸くするプロパティ

p {
    width: 200px;
    height: 80px;
    color: #fff;
    background: #999;
    border-radius: 10px;
}



2-8-6 boeder-shadow プロパティ
ボックスに影を表示させるプロパティ

#sample1 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
}
#sample2 {
    box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.4);
}


2-8-7 float プロパティ
ボックスを左または右に寄せて配置し、その反対側に後続の要素が回り込むようにするプロパティ


2-8-8 clear プロパティ
floatプロパティでボックスが寄せて表示され要素が回り込んでkル状態を解除するプロパティ


2-8-9 display プロパティ
要素の表示形式を設定するプロパティ


2-8-10 visibility プロパティ
ボックスが透明になったかのように見えなくすることのできるプロパティ


2-8-11 overflow プロパティ
要素内容がボックス内に収まりきらなくなったときにどうするかを設定するプロパティ


2-8-12 clip プロパティ
ボックスをクリッピングして表示させるプロパティ


2-9 マルチカラムとフレキシブルボックス
2-9-1 マルチカラムレイアウト
1つのボックスの内部を複数の弾に分割するタイプのレイアウト

2-9-2 column-count プロパティ
何段組みするのかを設定するプロパティ

body { column-count: 3; }


2-9-3 column-count プロパティ
段の幅を設定するプロパティ

div { column-width: 28em; }


2-9-4 columns プロパティ
column-count、column-countをまとめて指定できるプロパティ

body { columns: 2; }


2-9-5 column-gap プロパティ
段と段の間隔を設定するプロパティ


2-9-6 column-rule プロパティ

body {
    column-count: 3;
    column-gap: 1.2em;
    column-rule-width: 2px;
    column-rule-style: dotted;
    column-rule-color: #ccc;
}



2-9-7 column-span プロパティ

body {
    column-count: 3;
    column-gap: 1.2em;
    column-rule-width: 2px;
    column-rule-style: dotted;
    column-rule-color: #ccc;
}
h2 {
    column-span: all;
    color: white;
    background: black;
}



2-9-8 フレキシブルボックスレイアウト

<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>サンプル</title>
    <style>
    body, p { margin: 0; }
    div { display: flex; }
    p {
        width: 150px;
        height: 100px;
        padding: 10px;
        background: #ccc;
    }
    p:nth-child(2) { background: #999; }
    </style>
</head>
<body>
    <div>
        <p>これは1つ目のp要素です。</p>
        <p>これは2つ目のp要素です。</p>
        <p>これは3つ目のp要素です。</p>
    </div>
</body>
</html>



2-10 アニメーション
2-10-1 回転・拡大縮小・移動


2-10-2 transform プロパティ

div {
    width: 100px;
    height: 100px;
    color: #fff;
    background: #999;
    transform: translate(200px, 100px) scale(1.5, 1.5) rotate(45deg);
}



2-10-3 transform-origin プロパティ

transform-origin: top left;
transform: translate(200px, 100px) scale(1.5, 1.5) rotate(45deg);



2-10-4 CSS3のトランジションとは


2-10-5 transition-property プロパティ

#sample {
    transition-property: transform, opacity;
    transition-duration: 2s;
}


2-10-6 transition-duration プロパティ

#sample {
    transition-property: transform, opacity;
    transition-duration: 2s, 5s;
}



2-10-7 transition-timing-function プロパティ


2-10-8 transition-delay プロパティ


2-10-9 transition プロパティ

li {
    transition: background-color 3s;
    background-color: silver;
}
li:hover {
    background-color: red;
}



2-10-10 CSS3のアニメーションとは


2-10-11 @keyframes

@keyframes ���O {
  0% {
    �v���p�e�B: �l;
    �v���p�e�B: �l;
    �E�E�E
  }
  ��% {
    �v���p�e�B: �l;
    �v���p�e�B: �l;
    �E�E�E
  }

�E�E�E

  ��% {
    �v���p�e�B: �l;
    �v���p�e�B: �l;
    �E�E�E
  }

  100% {
    �v���p�e�B: �l;
    �v���p�e�B: �l;
    �E�E�E
  }
}


2-10-12 animation-name プロパティ


2-10-13 animation-duration プロパティ

#sample:hover {
    animation-name: jumping;
    animation-duration: 10s;
}


2-10-14 animation-timing-function プロパティ


2-10-15 animation-delay プロパティ


2-10-16 animation-iteration-count プロパティ


2-10-17 animation-direction プロパティ


2-10-18 animation-play-state プロパティ


2-10-19 animation-fill-mode プロパティ


2-10-20 animation プロパティ


2-11 その他

2-11-1 直線状のグラデーション

linear-gradient(方向, 開始色, 終了色)

background: linear-gradient(#ddd, #333);
background: linear-gradient(to bottom, #ddd, #333);
background: linear-gradient(180deg, #ddd, #333);
background: linear-gradient(180deg, #ddd 0%, #333 100%);



2-11-2 放射状のグラデーション

radial-gradient(中心の位置, 中心の色, 外側の色)

background: radial-gradient(#ddd, #333);
background: radial-gradient(at center, #ddd, #333);
background: radial-gradient(at 50% 50%, #ddd, #333);



2-11-3 リスト関連のプロパティ


2-11-4 テーブル関連のプロパティ


2-11-5 内容を追加するプロパティ

body {
    counter-reset: chapter;
}
h1::before {
    counter-increment: chapter;
    content: "第" counter(chapter) "章 ";
}








